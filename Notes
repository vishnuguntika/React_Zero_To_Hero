Before Learning React, we should know about these topics

HTML and CSS

Basics of JavaScript
> Variables 
  * var
  * let 
  * const

> Hoisting of variables


Functions in JS
> Arrow Functions
> Higher order functions


Arrays and Objects
> Array Destructuring
> Object Destructuring
> rest operator
> spread operator

Conditions in JavaScript
> if else
> ternary operator
> using && and ||
> Optional Chaining

Array Methods
> map()
> filter()
> reduce()
> sort()

Event Listeners
> onclick
> onBlur
> onChange
> onFocus
setTimeout() & setInterval()
(Event Bubbling Capturing aka Tracking in JavaScript)

Asynchronous Events
> Callbacks
> Callback Hell
> Promises
> Promise APIs


---

inline styling in react

const jsx = (
  <div
  className="js"
  style={{
  backgroundColor: "yellow",
  }}
  >
  <h1>JSX</h1>
  <h1>Second JSX</h1>
  </div>
)

or

const styleName = {
  backgroundColor: "yellow"
  }



inline styling in react

const jsx = (
  <div
  className="js"
  style={styleName}
  >
  <h1>JSX</h1>
  <h1>Second JSX</h1>
  </div>
)


dynamic data generation using map and foreach()

// const Body = () => {
//   return (
//     <div className="Restaurant-list">
      
//       {
//         // map() - traversing the info.
//         // <RestaurantCard {...restaurantList[0].info} />
//         restaurantList.map((restaurant) => {
//           return <RestaurantCard {...restaurant.info} />
//         })
//       }
     
      
//     </div>
//   );
// };

const Body = () => {
  const restaurantCards = [];

  restaurantList.forEach((restaurant) => {
    restaurantCards.push(<RestaurantCard {...restaurant.info} />);
  });

  return (
    <div className="Restaurant-list">
      {restaurantCards}
    </div>
  );
};


// const searchTxt = "KFC"; which we do in javascript

  // searchText is a local state variable
  const [searchTxt, setSearchTxt] = useState("KFC"); // returns = [variable name, function to update the variable]



  ---------------------------------

  To fetch the API, we have 2 ways to do this:

  1) First Loads the Page => API (300ms) => render the page (200ms) and total it takes 500ms

  2) First Loads the Page => render the page => API(useEffect) => update UI. (Best Way)

  We can do this using the useEffect() hook function.



  // Never create a functional component inside the functional component again.

  // Never write the useState() hook function inside the if condition.

  // Never write the useState() hook function inside the for loop.

  // Never use the useState() hook function outside the functional component.
   

